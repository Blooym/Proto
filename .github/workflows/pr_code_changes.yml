name: "PR: Code Changes"

on:
  pull_request:
    branches: [main]
    types: [ready_for_review, opened, synchronize, reopened]
    paths:
      - "**.go"
      - "go.mod"
      - "go.sum"
      - ".goreleaser.yml"

jobs:
  # Check if any changes are made to protected files
  No-Invalid-Edits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Validate Edited Files
        uses: dorny/paths-filter@v2
        id: changes
        with:
          list-files: "json"
          filters: |
            src:
              - 'proto.rb'

      - name: Fail CI on Invalid Edit
        if: steps.changes.outputs.src == 'true'
        run: |
          echo "::error::Contains invalid file edits"
          exit 1

  # Check to see if any new dependency in this pull request is vulnerable.
  Dependency-Review:
    runs-on: ubuntu-latest
    needs: ["No-Invalid-Edits"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Dependency Review
        uses: actions/dependency-review-action@v3

  # If all is good, create a preview build for the pull request if needed.
  Preview:
    runs-on: ubuntu-latest
    needs: ["Dependency-Review", "No-Invalid-Edits"]
    timeout-minutes: 60
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: build --clean --snapshot --timeout 60m
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SKIP_COMPRESS: true

      - name: Upload Assets
        uses: actions/upload-artifact@v3
        with:
          path: |
            dist/proto*_*/*
            checksums.txt
